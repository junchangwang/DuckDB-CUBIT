# name: test/sql/alter/alter_col/test_add_primary_key_transaction.test
# description: Test ALTER TABLE table ADD PRIMARY KEY (column) when using transactions
# group: [alter_col]

statement ok
PRAGMA enable_verification

# Scenario #1: invalidate constraint with uncommitted changes but rollback
statement ok
CREATE TABLE test1 (i INTEGER, j INTEGER)

statement ok
BEGIN TRANSACTION

# Uncommitted change
statement ok
INSERT INTO test1 VALUES (1, 1)

statement ok
ALTER TABLE test1 ADD PRIMARY KEY (j)

# This passes as it's not committed yet
statement ok
INSERT INTO test1 VALUES (2, 1)

# This should be fine
statement ok
ROLLBACK

# Can insert duplicates after rollback
statement ok
INSERT INTO test1 VALUES (1, 1)

statement ok
INSERT INTO test1 VALUES (2, 1)

statement ok
INSERT INTO test1 VALUES (2, NULL)

# Scenario #2: invalidate constraint with uncommitted changes
statement ok
CREATE TABLE test2 (i INTEGER, j INTEGER)

statement ok
BEGIN TRANSACTION

statement ok
INSERT INTO test2 VALUES (1, 1)

statement ok
ALTER TABLE test2 ADD PRIMARY KEY (j)

statement ok
INSERT INTO test2 VALUES (2, 1)

# Now it should fail
statement error
COMMIT
----
Failed to commit: PRIMARY KEY or UNIQUE constraint violated: duplicate key "1"

# Scenario #3: commit successfully preserves primary key
statement ok
CREATE TABLE test3 (i INTEGER, j INTEGER)

statement ok
BEGIN TRANSACTION

statement ok
INSERT INTO test2 VALUES (1, 1)

statement ok
ALTER TABLE test2 ADD PRIMARY KEY (j)

statement ok
COMMIT

statement error
INSERT INTO test2 VALUES (2, 1)
----
Duplicate key "j: 1" violates primary key constraint

# Scenario #4: double primary key added
statement ok
CREATE TABLE test4 (i INTEGER, j INTEGER)

statement ok
BEGIN TRANSACTION

statement ok
ALTER TABLE test4 ADD PRIMARY KEY (j)

# Errors immediately, but does not cause the transaction to abort
statement error
ALTER TABLE test4 ADD PRIMARY KEY (i)
----
Catalog Error: table "test4" can have only one primary key, and already has PRIMARY KEY(j).

statement ok
COMMIT

# Scenario #5: add and delete conflicting row within transaction
statement ok
CREATE TABLE test5 (i INTEGER, j INTEGER)

statement ok
BEGIN TRANSACTION

statement ok
INSERT INTO test5 VALUES (1, 1)

statement ok
ALTER TABLE test5 ADD PRIMARY KEY (j)

statement ok
INSERT INTO test5 VALUES (2, 1)

statement ok
DELETE FROM test5 WHERE i = 2

statement ok
COMMIT

# Scenario #6: Multiple transaction try to add primary key
statement ok
CREATE TABLE test6 (i INTEGER, j INTEGER)

statement ok tran1
BEGIN TRANSACTION

statement ok tran1
ALTER TABLE test6 ADD PRIMARY KEY (j)

statement ok tran2
BEGIN TRANSACTION

statement error tran2
ALTER TABLE test6 ADD PRIMARY KEY (j)
----
TransactionContext Error: Catalog write-write conflict on alter with "test6"
